// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using PracticeApp.Data;
using PracticeApp.Models;
using System;
using System.Collections.Generic;

namespace PracticeApp.Data.Configurations
{
    public partial class ProductsConfiguration : IEntityTypeConfiguration<Products>
    {
        public void Configure(EntityTypeBuilder<Products> entity)
        {
            entity.HasKey(e => e.PRODUCT_ID);

            entity.HasIndex(e => e.CATEGORY_ID, "IDX_PRODUCTS_CATEGORY_ID");

            entity.HasIndex(e => e.SUPPLIER_ID, "IDX_PRODUCTS_SUPPLIER_ID");

            entity.Property(e => e.PRODUCT_ID)
            .HasPrecision(9)
            .ValueGeneratedNever();
            entity.Property(e => e.CATEGORY_ID).HasPrecision(9);
            entity.Property(e => e.DISCONTINUED)
            .IsRequired()
            .HasMaxLength(1)
            .IsUnicode(false)
            .HasDefaultValueSql("'N'\n   ")
            .IsFixedLength();
            entity.Property(e => e.PRODUCT_NAME)
            .IsRequired()
            .HasMaxLength(40)
            .IsUnicode(false);
            entity.Property(e => e.QUANTITY_PER_UNIT)
            .HasMaxLength(20)
            .IsUnicode(false);
            entity.Property(e => e.REORDER_LEVEL)
            .HasPrecision(9)
            .HasDefaultValueSql("0");
            entity.Property(e => e.SUPPLIER_ID).HasPrecision(9);
            entity.Property(e => e.UNITS_IN_STOCK)
            .HasPrecision(9)
            .HasDefaultValueSql("0");
            entity.Property(e => e.UNITS_ON_ORDER)
            .HasPrecision(9)
            .HasDefaultValueSql("0");
            entity.Property(e => e.UNIT_PRICE)
            .HasDefaultValueSql("0")
            .HasColumnType("NUMBER(10,2)");

            entity.HasOne(d => d.CATEGORY).WithMany(p => p.Products)
            .HasForeignKey(d => d.CATEGORY_ID)
            .OnDelete(DeleteBehavior.ClientSetNull)
            .HasConstraintName("FK_CATEGORY_ID");

            entity.HasOne(d => d.SUPPLIER).WithMany(p => p.Products)
            .HasForeignKey(d => d.SUPPLIER_ID)
            .OnDelete(DeleteBehavior.ClientSetNull)
            .HasConstraintName("FK_SUPPLIER_ID");

            OnConfigurePartial(entity);
        }

        partial void OnConfigurePartial(EntityTypeBuilder<Products> entity);
    }
}
